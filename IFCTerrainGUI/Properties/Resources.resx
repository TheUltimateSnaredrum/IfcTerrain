<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnRead" xml:space="preserve">
    <value>&amp;Read</value>
  </data>
  <data name="btnSettings" xml:space="preserve">
    <value>&amp;Settings</value>
  </data>
  <data name="btnWrite" xml:space="preserve">
    <value>&amp;Write IFC</value>
  </data>
  <data name="chkReplace" xml:space="preserve">
    <value>Generate Points on Breaklines</value>
  </data>
  <data name="errFileNotReadable" xml:space="preserve">
    <value>File: {0} is not readable.</value>
  </data>
  <data name="errNoTIN" xml:space="preserve">
    <value>File {0} contains no TIN.</value>
  </data>
  <data name="errNoTINData" xml:space="preserve">
    <value>TIN in File {0} contains no readable data.</value>
  </data>
  <data name="gpEditor" xml:space="preserve">
    <value>Editor</value>
  </data>
  <data name="gpFile" xml:space="preserve">
    <value>Current Terrain</value>
  </data>
  <data name="gpMsg" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="gpOrigin" xml:space="preserve">
    <value>Site origin</value>
  </data>
  <data name="lblCompany" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="lblDist" xml:space="preserve">
    <value>with distance</value>
  </data>
  <data name="lblExtent" xml:space="preserve">
    <value>Extent</value>
  </data>
  <data name="lblFamily" xml:space="preserve">
    <value>Family name</value>
  </data>
  <data name="lblFile" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="lblGiven" xml:space="preserve">
    <value>Given name</value>
  </data>
  <data name="lblName" xml:space="preserve">
    <value>Project name</value>
  </data>
  <data name="lblType" xml:space="preserve">
    <value>File type</value>
  </data>
  <data name="msgReadFile" xml:space="preserve">
    <value>Read {0} file {1}.</value>
  </data>
  <data name="msgSuccessRead" xml:space="preserve">
    <value>{0} File {1} successfull read.</value>
  </data>
  <data name="rbCtr" xml:space="preserve">
    <value>At terrain center</value>
  </data>
  <data name="rbCust" xml:space="preserve">
    <value>custom</value>
  </data>
  <data name="rbMax" xml:space="preserve">
    <value>At terrain maximum</value>
  </data>
  <data name="rbMin" xml:space="preserve">
    <value>At terrain minimum</value>
  </data>
  <data name="rbSys" xml:space="preserve">
    <value>At system origin</value>
  </data>
  <data name="msgWriteFile" xml:space="preserve">
    <value>Create IFC and write file {0}.</value>
  </data>
  <data name="msgWriteSuccess" xml:space="preserve">
    <value>IFC wrote to file {0}.</value>
  </data>
  <data name="btnExit" xml:space="preserve">
    <value>&amp;Exit</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="IFCTerrain" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>IFCTerrain.rtf;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="chkZ" xml:space="preserve">
    <value>Z-Origin = 0</value>
  </data>
  <data name="errNoLineData" xml:space="preserve">
    <value>The Layer contains no line data.</value>
  </data>
  <data name="msgLayerSucces" xml:space="preserve">
    <value>Layer successfull read.</value>
  </data>
  <data name="msgProcess" xml:space="preserve">
    <value>Process layer {0}.</value>
  </data>
  <data name="process" xml:space="preserve">
    <value>Read data</value>
  </data>
  <data name="read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="btnConvert" xml:space="preserve">
    <value>Convert to TIN</value>
  </data>
  <data name="msgTINConv" xml:space="preserve">
    <value>TIN with {0} Triangles created.</value>
  </data>
  <data name="lblPtDist" xml:space="preserve">
    <value>Minimal point distance</value>
  </data>
  <data name="rbFaces" xml:space="preserve">
    <value>Read Faces</value>
  </data>
  <data name="rbIndPoly" xml:space="preserve">
    <value>Read Points / Lines</value>
  </data>
  <data name="lblHorizon" xml:space="preserve">
    <value>Horizon:</value>
  </data>
  <data name="msgProcessReb" xml:space="preserve">
    <value>Process horizon {0}.</value>
  </data>
  <data name="msgHorizonSuccess" xml:space="preserve">
    <value>Horizon successfull read.</value>
  </data>
  <data name="btnChoose" xml:space="preserve">
    <value>&amp;Choose file</value>
  </data>
  <data name="btnInput" xml:space="preserve">
    <value>&amp;Input</value>
  </data>
  <data name="btnOutput" xml:space="preserve">
    <value>&amp;Output</value>
  </data>
  <data name="btnReadFile" xml:space="preserve">
    <value>&amp;Read file</value>
  </data>
  <data name="gpMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="lblCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="msgCount" xml:space="preserve">
    <value>Points: {0} Lines: {1} Faces: {2}</value>
  </data>
  <data name="rb3D" xml:space="preserve">
    <value>Terrain contains vertical faces</value>
  </data>
  <data name="DD_BIM_LOGO" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\DD_BIM_LOGO.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>